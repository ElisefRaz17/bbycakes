{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elise\\\\Documents\\\\bbycakesbusiness\\\\frontend\\\\src\\\\pages\\\\Order.page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Select, MenuItem, InputLabel, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\nimport Textarea from \"../components/TextArea\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Order() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [form, setForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n    zipcode: 0,\n    pickUpDate: Date,\n    pickUpTime: Date,\n    numberOfServings: 0,\n    orderType: \"\",\n    flavor: \"\",\n    orderDetails: \"\",\n    refPictures: \"\"\n  });\n  const [isNew, setIsNew] = useState(true);\n  const params = useParams();\n  const orderTypes = [{\n    id: 1,\n    value: \"Cupcakes\"\n  }, {\n    id: 2,\n    value: \"Cakes\"\n  }, {\n    id: 3,\n    value: \"Cakes & Cupcakes\"\n  }];\n  const flavors = [{\n    id: 1,\n    value: \"Strawberry\"\n  }, {\n    id: 2,\n    value: \"Vanilla\"\n  }, {\n    id: 3,\n    value: \"Chocolate\"\n  }, {\n    id: 4,\n    value: \"Red Velvet\"\n  }, {\n    id: 5,\n    value: \"Carrot\"\n  }, {\n    id: 6,\n    value: \"Other (please list below in details)\"\n  }];\n  const convert24to12 = time => {\n    // Extract hours and minutes from the time string\n    const hours = parseInt(time.slice(0, 2));\n    const minutes = time.slice(3, 5);\n\n    // Determine AM or PM\n    const amOrPm = hours >= 12 ? \"PM\" : \"AM\";\n\n    // Convert hours to 12-hour format\n    const twelveHourTime = `${hours % 12 || 12}:${minutes} ${amOrPm}`;\n    return twelveHourTime;\n  };\n  useEffect(() => {\n    async function fetchData() {\n      var _params$id;\n      const id = ((_params$id = params.id) === null || _params$id === void 0 ? void 0 : _params$id.toString()) || undefined;\n      if (!id) return;\n      setIsNew(false);\n      const response = await fetch(`http://localhost:5050/record/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        console.error(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        console.warn(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const person = {\n      ...form\n    };\n    try {\n      let response;\n      if (isNew) {\n        response = await fetch(\"http://localhost:5050/record\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(person)\n        });\n      } else {\n        response = await fetch(`http://localhost:5050/record/${params.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(person)\n        });\n      }\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.log(\"A problem occurred with your fetch operation: \", error);\n    } finally {\n      setForm({\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        email: \"\",\n        zipcode: 0,\n        pickUpDate: Date,\n        pickUpTime: Date,\n        numberOfServings: 0,\n        orderType: \"\",\n        flavor: \"\",\n        orderDetails: \"\",\n        refPictures: \"\"\n      });\n      navigate(\"/\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-7\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white w-2/4 rounded-md flex flex-row justify-around mr-auto ml-auto pl-12\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          maxWidth: \"450px\",\n          margin: \"auto\",\n          height: \"100%\",\n          gap: \"3rem\"\n        },\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold py-3\",\n          children: \"Let's Get You Some Cake!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          type: \"text\",\n          variant: \"outlined\",\n          name: \"firstName\",\n          value: form.firstName,\n          onChange: e => updateForm({\n            firstName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Last Name\",\n          type: \"text\",\n          variant: \"outlined\",\n          name: \"lastName\",\n          value: form.lastName,\n          onChange: e => updateForm({\n            lastName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Phone Number\",\n          type: \"tel\",\n          variant: \"outlined\",\n          name: \"phoneNumber\",\n          value: form.phoneNumber,\n          onChange: e => updateForm({\n            phoneNumber: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          type: \"email\",\n          variant: \"outlined\",\n          name: \"email\",\n          value: form.email,\n          onChange: e => updateForm({\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Pickup Date\",\n          type: \"date\",\n          variant: \"outlined\",\n          name: \"date\",\n          value: form.pickUpDate,\n          onChange: e => updateForm({\n            pickUpDate: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Pickup Time\",\n          type: \"time\",\n          variant: \"outlined\",\n          name: \"time\",\n          onChange: e => {\n            const timeUpdate = convert24to12(e.target.value);\n            updateForm({\n              pickUpTime: timeUpdate\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Number of Servings\",\n          type: \"text\",\n          variant: \"outlined\",\n          name: \"servings\",\n          value: form.numberOfServings,\n          onChange: e => updateForm({\n            numberOfServings: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"ZipCode\",\n          type: \"number\",\n          variant: \"outlined\",\n          name: \"zipcode\",\n          value: form.zipcode,\n          onChange: e => updateForm({\n            zipcode: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Order Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            sx: {\n              width: \"60%\"\n            },\n            onChange: e => updateForm({\n              orderType: e.target.value\n            }),\n            children: orderTypes.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.value,\n              children: item.value\n            }, item.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Flavor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            onChange: e => updateForm({\n              flavor: e.target.name\n            }),\n            children: flavors.map(item => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: item.id,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 28\n              }, this),\n              label: item.value\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            border: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Order Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            minRows: 3,\n            value: form.orderDetails,\n            placeholder: \"Allergies, Cake Flavor, and etc.\",\n            onChange: e => updateForm({\n              orderDetails: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Reference Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            minRows: 3,\n            value: form.refPictures,\n            placeholder: \"links\",\n            label: \"Reference Photos\",\n            onChange: e => updateForm({\n              refPictures: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              backgroundColor: \"black\"\n            },\n            type: \"submit\",\n            children: \"Submit Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(Order, \"luKGx16eY0sbPBSg8tMpE6F5EyA=\", false, function () {\n  return [useNavigate, useLocation, useParams];\n});\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Select","MenuItem","InputLabel","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","Textarea","useLocation","useNavigate","useParams","jsxDEV","_jsxDEV","Order","_s","navigate","location","form","setForm","firstName","lastName","phoneNumber","email","zipcode","pickUpDate","Date","pickUpTime","numberOfServings","orderType","flavor","orderDetails","refPictures","isNew","setIsNew","params","orderTypes","id","value","flavors","convert24to12","time","hours","parseInt","slice","minutes","amOrPm","twelveHourTime","fetchData","_params$id","toString","undefined","response","fetch","ok","message","statusText","console","error","record","json","warn","updateForm","prev","onSubmit","e","preventDefault","person","method","headers","body","JSON","stringify","Error","status","log","className","children","style","display","flexDirection","maxWidth","margin","height","gap","fileName","_jsxFileName","lineNumber","columnNumber","label","type","variant","name","onChange","target","timeUpdate","fullWidth","select","sx","width","map","item","row","control","border","minRows","placeholder","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/elise/Documents/bbycakesbusiness/frontend/src/pages/Order.page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from \"@mui/material\";\r\nimport Textarea from \"../components/TextArea\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction Order() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    zipcode: 0,\r\n    pickUpDate: Date,\r\n    pickUpTime: Date,\r\n    numberOfServings: 0,\r\n    orderType: \"\",\r\n    flavor: \"\",\r\n    orderDetails: \"\",\r\n    refPictures: \"\",\r\n  });\r\n  const [isNew, setIsNew] = useState(true);\r\n  const params = useParams();\r\n  const orderTypes = [\r\n    {\r\n      id: 1,\r\n      value: \"Cupcakes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      value: \"Cakes\",\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"Cakes & Cupcakes\",\r\n    },\r\n  ];\r\n  const flavors = [\r\n    {\r\n      id: 1,\r\n      value: \"Strawberry\",\r\n    },\r\n    {\r\n      id: 2,\r\n      value: \"Vanilla\",\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"Chocolate\",\r\n    },\r\n    {\r\n      id: 4,\r\n      value: \"Red Velvet\",\r\n    },\r\n    {\r\n      id: 5,\r\n      value: \"Carrot\",\r\n    },\r\n    {\r\n      id: 6,\r\n      value: \"Other (please list below in details)\",\r\n    },\r\n  ];\r\n  const convert24to12 = (time) => {\r\n    // Extract hours and minutes from the time string\r\n    const hours = parseInt(time.slice(0, 2));\r\n    const minutes = time.slice(3, 5);\r\n\r\n    // Determine AM or PM\r\n    const amOrPm = hours >= 12 ? \"PM\" : \"AM\";\r\n\r\n    // Convert hours to 12-hour format\r\n    const twelveHourTime = `${hours % 12 || 12}:${minutes} ${amOrPm}`;\r\n\r\n    return twelveHourTime;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id?.toString() || undefined;\r\n      if (!id) return;\r\n      setIsNew(false);\r\n      const response = await fetch(\r\n        `http://localhost:5050/record/${params.id.toString()}`\r\n      );\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        console.error(message);\r\n        return;\r\n      }\r\n      const record = await response.json();\r\n      if (!record) {\r\n        console.warn(`Record with id ${id} not found`);\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n      setForm(record);\r\n    }\r\n    fetchData();\r\n    return;\r\n  }, [params.id, navigate]);\r\n\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    const person = { ...form };\r\n    try {\r\n      let response;\r\n      if (isNew) {\r\n        response = await fetch(\"http://localhost:5050/record\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(person),\r\n        });\r\n      } else {\r\n        response = await fetch(`http://localhost:5050/record/${params.id}`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(person),\r\n        });\r\n      }\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"A problem occurred with your fetch operation: \", error);\r\n    } finally {\r\n      setForm({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n        zipcode: 0,\r\n        pickUpDate: Date,\r\n        pickUpTime: Date,\r\n        numberOfServings: 0,\r\n        orderType: \"\",\r\n        flavor: \"\",\r\n        orderDetails: \"\",\r\n        refPictures: \"\",\r\n      });\r\n      navigate(\"/\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"py-7\">\r\n      <div className=\"bg-white w-2/4 rounded-md flex flex-row justify-around mr-auto ml-auto pl-12\">\r\n        <form\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            maxWidth: \"450px\",\r\n            margin: \"auto\",\r\n            height: \"100%\",\r\n            gap: \"3rem\",\r\n          }}\r\n          onSubmit={onSubmit}\r\n        >\r\n          <h1 className=\"text-2xl font-semibold py-3\">\r\n            Let's Get You Some Cake!\r\n          </h1>\r\n          <TextField\r\n            label=\"First Name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            name=\"firstName\"\r\n            value={form.firstName}\r\n            onChange={(e) => updateForm({ firstName: e.target.value })}\r\n          />\r\n          <TextField\r\n            label=\"Last Name\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            name=\"lastName\"\r\n            value={form.lastName}\r\n            onChange={(e) => updateForm({ lastName: e.target.value })}\r\n          />\r\n          <TextField\r\n            label=\"Phone Number\"\r\n            type=\"tel\"\r\n            variant=\"outlined\"\r\n            name=\"phoneNumber\"\r\n            value={form.phoneNumber}\r\n            onChange={(e) => updateForm({ phoneNumber: e.target.value })}\r\n          />\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={(e) => updateForm({ email: e.target.value })}\r\n          />\r\n          <TextField\r\n            label=\"Pickup Date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            name=\"date\"\r\n            value={form.pickUpDate}\r\n            onChange={(e) => updateForm({ pickUpDate: e.target.value })}\r\n          />\r\n          <TextField\r\n            label=\"Pickup Time\"\r\n            type=\"time\"\r\n            variant=\"outlined\"\r\n            name=\"time\"\r\n            onChange={(e) => {\r\n              const timeUpdate = convert24to12(e.target.value);\r\n              updateForm({ pickUpTime: timeUpdate });\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Number of Servings\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            name=\"servings\"\r\n            value={form.numberOfServings}\r\n            onChange={(e) => updateForm({ numberOfServings: e.target.value })}\r\n          />\r\n          <TextField\r\n            label=\"ZipCode\"\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            name=\"zipcode\"\r\n            value={form.zipcode}\r\n            onChange={(e) => updateForm({ zipcode: e.target.value })}\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel>Order Type</InputLabel>\r\n            <TextField\r\n              select\r\n              sx={{ width: \"60%\" }}\r\n              onChange={(e) => updateForm({ orderType: e.target.value })}\r\n            >\r\n              {orderTypes.map((item) => (\r\n                <MenuItem key={item.value} value={item.value}>\r\n                  {item.value}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormLabel>Flavor</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              onChange={(e) => updateForm({ flavor: e.target.name })}\r\n            >\r\n              {flavors.map((item) => (\r\n                <FormControlLabel\r\n                  value={item.id}\r\n                  key={item.id}\r\n                  control={<Radio />}\r\n                  label={item.value}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <FormControl sx={{ border: \"none\" }}>\r\n            <FormLabel>Order Details</FormLabel>\r\n            <Textarea\r\n              minRows={3}\r\n              value={form.orderDetails}\r\n              placeholder=\"Allergies, Cake Flavor, and etc.\"\r\n              onChange={(e) => updateForm({ orderDetails: e.target.value })}\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormLabel>Reference Photos</FormLabel>\r\n            <Textarea\r\n              minRows={3}\r\n              value={form.refPictures}\r\n              placeholder=\"links\"\r\n              label=\"Reference Photos\"\r\n              onChange={(e) => updateForm({ refPictures: e.target.value })}\r\n            />\r\n          </FormControl>\r\n          <div className=\"py-2\">\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ backgroundColor: \"black\" }}\r\n              type=\"submit\"\r\n            >\r\n              Submit Order\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}