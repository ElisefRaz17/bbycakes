{"ast":null,"code":"import{Button,TextField}from\"@mui/material\";import{useContext,useEffect,useState}from\"react\";import{Link,useLocation,useNavigate}from\"react-router-dom\";import{UserContext}from\"../contexts/user.context\";import Image from\"../assets/Purse.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const location=useLocation();// We are consuming our user-management context to\n// get & set the user details here\nconst{user,fetchUser,emailPasswordLogin}=useContext(UserContext);// We are using React's \"useState\" hook to keep track\n//  of the form values.\nconst[form,setForm]=useState({email:\"\",password:\"\"});// This function will be called whenever the user edits the form.\nconst onFormInputChange=event=>{const{name,value}=event.target;setForm({...form,[name]:value});};// This function will redirect the user to the\n// appropriate page once the authentication is done.\nconst redirectNow=()=>{const redirectTo=location.search.replace(\"?redirectTo=\",\"\");navigate(redirectTo?redirectTo:\"/\");};// Once a user logs in to our app, we don’t want to ask them for their\n// credentials again every time the user refreshes or revisits our app,\n// so we are checking if the user is already logged in and\n// if so we are redirecting the user to the home page.\n// Otherwise we will do nothing and let the user to login.\nconst loadUser=async()=>{if(!user){const fetchedUser=await fetchUser();if(fetchedUser){// Redirecting them once fetched.\nredirectNow();}}};// This useEffect will run only once when the component is mounted.\n// Hence this is helping us in verifying whether the user is already logged in\n// or not.\nuseEffect(()=>{loadUser();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// This function gets fired when the user clicks on the \"Login\" button.\nconst onSubmit=async event=>{try{// Here we are passing user details to our emailPasswordLogin\n// function that we imported from our realm/authentication.js\n// to validate the user credentials and log in the user into our App.\nconst user=await emailPasswordLogin(form.email,form.password);if(user){redirectNow();}}catch(error){if(error.statusCode===401){alert(\"Invalid username/password. Try again!\");}else{alert(error);}}};return/*#__PURE__*/_jsx(\"div\",{className:\"p-7\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white w-2/4 h-[535px] rounded-md flex flex-row justify-around mr-auto ml-auto pl-12\",children:[/*#__PURE__*/_jsxs(\"form\",{style:{display:\"flex\",flexDirection:\"column\",maxWidth:\"300px\",margin:\"auto\",height:\"50%\"},children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-semibold py-3\",children:\"Login\"}),/*#__PURE__*/_jsx(TextField,{label:\"Email\",type:\"email\",variant:\"outlined\",name:\"email\",value:form.email,onChange:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",type:\"password\",variant:\"outlined\",name:\"password\",value:form.password,onChange:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",sx:{backgroundColor:\"darkred\"},onClick:onSubmit,children:\"Login\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Signup\"})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Image,alt:\"logo\",style:{height:'500px'}})})]})});};export default Login;","map":{"version":3,"names":["Button","TextField","useContext","useEffect","useState","Link","useLocation","useNavigate","UserContext","Image","jsx","_jsx","jsxs","_jsxs","Login","navigate","location","user","fetchUser","emailPasswordLogin","form","setForm","email","password","onFormInputChange","event","name","value","target","redirectNow","redirectTo","search","replace","loadUser","fetchedUser","onSubmit","error","statusCode","alert","className","children","style","display","flexDirection","maxWidth","margin","height","label","type","variant","onChange","marginBottom","sx","backgroundColor","onClick","to","src","alt"],"sources":["C:/Users/elise/Documents/BBYCakes-Business/bbycakes/frontend/src/pages/Login.page.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/user.context\";\r\nimport Image from \"../assets/Purse.png\"\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // We are consuming our user-management context to\r\n  // get & set the user details here\r\n  const { user, fetchUser, emailPasswordLogin } = useContext(UserContext);\r\n\r\n  // We are using React's \"useState\" hook to keep track\r\n  //  of the form values.\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // This function will be called whenever the user edits the form.\r\n  const onFormInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  // This function will redirect the user to the\r\n  // appropriate page once the authentication is done.\r\n  const redirectNow = () => {\r\n    const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\r\n    navigate(redirectTo ? redirectTo : \"/\");\r\n  };\r\n\r\n  // Once a user logs in to our app, we don’t want to ask them for their\r\n  // credentials again every time the user refreshes or revisits our app,\r\n  // so we are checking if the user is already logged in and\r\n  // if so we are redirecting the user to the home page.\r\n  // Otherwise we will do nothing and let the user to login.\r\n  const loadUser = async () => {\r\n    if (!user) {\r\n      const fetchedUser = await fetchUser();\r\n      if (fetchedUser) {\r\n        // Redirecting them once fetched.\r\n        redirectNow();\r\n      }\r\n    }\r\n  };\r\n\r\n  // This useEffect will run only once when the component is mounted.\r\n  // Hence this is helping us in verifying whether the user is already logged in\r\n  // or not.\r\n  useEffect(() => {\r\n    loadUser(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // This function gets fired when the user clicks on the \"Login\" button.\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      // Here we are passing user details to our emailPasswordLogin\r\n      // function that we imported from our realm/authentication.js\r\n      // to validate the user credentials and log in the user into our App.\r\n      const user = await emailPasswordLogin(form.email, form.password);\r\n      if (user) {\r\n        redirectNow();\r\n      }\r\n    } catch (error) {\r\n      if (error.statusCode === 401) {\r\n        alert(\"Invalid username/password. Try again!\");\r\n      } else {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-7\">\r\n      <div className=\"bg-white w-2/4 h-[535px] rounded-md flex flex-row justify-around mr-auto ml-auto pl-12\">\r\n        <form\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            maxWidth: \"300px\",\r\n            margin: \"auto\",\r\n            height: \"50%\",\r\n          }}\r\n        >\r\n          <h1 className=\"text-2xl font-semibold py-3\">Login</h1>\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={onFormInputChange}\r\n            style={{ marginBottom: \"1rem\" }}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={onFormInputChange}\r\n            style={{ marginBottom: \"1rem\" }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ backgroundColor: \"darkred\" }}\r\n            onClick={onSubmit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <p>\r\n            Don't have an account? <Link to=\"/signup\">Signup</Link>\r\n          </p>\r\n        </form>\r\n        <div>\r\n          <img src={Image} alt=\"logo\" style={{height:'500px'}}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}