{"ast":null,"code":"import{useContext}from\"react\";import{Navigate,Outlet,useLocation}from\"react-router-dom\";import{UserContext}from\"../contexts/user.context\";import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=()=>{// Fetching the user from the user context.\nconst{user}=useContext(UserContext);const location=useLocation();const redirectLoginUrl=`/login?redirectTo=${encodeURI(location.pathname)}`;// If the user is not logged in we are redirecting them\n// to the login page. Otherwise we are letting them to\n// continue to the page as per the URL using <Outlet />.\nreturn!user?/*#__PURE__*/_jsx(Navigate,{to:redirectLoginUrl}):/*#__PURE__*/_jsx(Outlet,{});};export default PrivateRoute;","map":{"version":3,"names":["useContext","Navigate","Outlet","useLocation","UserContext","jsx","_jsx","PrivateRoute","user","location","redirectLoginUrl","encodeURI","pathname","to"],"sources":["C:/Users/elise/Documents/BBYCakes-Business/bbycakes/frontend/src/pages/PrivateRoute.page.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/user.context\";\r\n\r\nconst PrivateRoute = () => {\r\n  // Fetching the user from the user context.\r\n  const { user } = useContext(UserContext);\r\n  const location = useLocation();\r\n  const redirectLoginUrl = `/login?redirectTo=${encodeURI(location.pathname)}`;\r\n\r\n  // If the user is not logged in we are redirecting them\r\n  // to the login page. Otherwise we are letting them to\r\n  // continue to the page as per the URL using <Outlet />.\r\n  return !user ? <Navigate to={redirectLoginUrl} /> : <Outlet />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,QAAQ,CAAEC,MAAM,CAAEC,WAAW,KAAQ,kBAAkB,CAChE,OAASC,WAAW,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB;AACA,KAAM,CAAEC,IAAK,CAAC,CAAGR,UAAU,CAACI,WAAW,CAAC,CACxC,KAAM,CAAAK,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAO,gBAAgB,CAAG,qBAAqBC,SAAS,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAE,CAE5E;AACA;AACA;AACA,MAAO,CAACJ,IAAI,cAAGF,IAAA,CAACL,QAAQ,EAACY,EAAE,CAAEH,gBAAiB,CAAE,CAAC,cAAGJ,IAAA,CAACJ,MAAM,GAAE,CAAC,CAChE,CAAC,CAED,cAAe,CAAAK,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}