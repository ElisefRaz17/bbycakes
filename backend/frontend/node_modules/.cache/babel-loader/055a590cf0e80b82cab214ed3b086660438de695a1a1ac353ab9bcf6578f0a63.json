{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elise\\\\Documents\\\\bbycakesbusiness\\\\frontend\\\\src\\\\pages\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/user.context';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Logout() {\n  _s();\n  const {\n    logOutUser\n  } = useContext(UserContext);\n\n  // This function is called when the user clicks the \"Logout\" button.\n  const logOut = async () => {\n    try {\n      // Calling the logOutUser function from the user context.\n      const loggedOut = await logOutUser();\n      // Now we will refresh the page, and the user will be logged out and\n      // redirected to the login page because of the <PrivateRoute /> component.\n      if (loggedOut) {\n        window.location.reload(true);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Expengo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: logOut,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Logout, \"bOfhNsW+Y6qp5P8tmMC4EoFxsBo=\");\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","Button","useContext","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Logout","_s","logOutUser","logOut","loggedOut","window","location","reload","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/elise/Documents/bbycakesbusiness/frontend/src/pages/Logout.js"],"sourcesContent":["import React from 'react'\r\nimport { Button } from '@mui/material'\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../contexts/user.context';\r\n\r\nfunction Logout() {\r\n    const { logOutUser } = useContext(UserContext);\r\n \r\n    // This function is called when the user clicks the \"Logout\" button.\r\n    const logOut = async () => {\r\n      try {\r\n        // Calling the logOutUser function from the user context.\r\n        const loggedOut = await logOutUser();\r\n        // Now we will refresh the page, and the user will be logged out and\r\n        // redirected to the login page because of the <PrivateRoute /> component.\r\n        if (loggedOut) {\r\n          window.location.reload(true);\r\n        }\r\n      } catch (error) {\r\n        alert(error)\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <h1>Welcome to Expengo</h1>\r\n        <Button variant=\"contained\" onClick={logOut}>Logout</Button>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Logout"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAW,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;;EAE9C;EACA,MAAMQ,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF;MACA,MAAMC,SAAS,GAAG,MAAMF,UAAU,CAAC,CAAC;MACpC;MACA;MACA,IAAIE,SAAS,EAAE;QACbC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAAC;IACd;EACF,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA,CAACJ,MAAM;MAACsB,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEb,MAAO;MAAAO,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC5D,CAAC;AAET;AAACb,EAAA,CAxBQD,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AA0Bf,eAAeA,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}