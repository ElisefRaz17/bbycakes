{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elise\\\\Documents\\\\bbycakesbusiness\\\\frontend\\\\src\\\\pages\\\\Login.page.js\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from \"@mui/material\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\nimport Image from \"../assets/Purse.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // We are consuming our user-management context to\n  // get & set the user details here\n  const {\n    user,\n    fetchUser,\n    emailPasswordLogin\n  } = useContext(UserContext);\n\n  // We are using React's \"useState\" hook to keep track\n  //  of the form values.\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  // This function will be called whenever the user edits the form.\n  const onFormInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n\n  // This function will redirect the user to the\n  // appropriate page once the authentication is done.\n  const redirectNow = () => {\n    const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\n    navigate(redirectTo ? redirectTo : \"/\");\n  };\n\n  // Once a user logs in to our app, we don’t want to ask them for their\n  // credentials again every time the user refreshes or revisits our app,\n  // so we are checking if the user is already logged in and\n  // if so we are redirecting the user to the home page.\n  // Otherwise we will do nothing and let the user to login.\n  const loadUser = async () => {\n    if (!user) {\n      const fetchedUser = await fetchUser();\n      if (fetchedUser) {\n        // Redirecting them once fetched.\n        redirectNow();\n      }\n    }\n  };\n\n  // This useEffect will run only once when the component is mounted.\n  // Hence this is helping us in verifying whether the user is already logged in\n  // or not.\n  useEffect(() => {\n    loadUser(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // This function gets fired when the user clicks on the \"Login\" button.\n  const onSubmit = async event => {\n    try {\n      // Here we are passing user details to our emailPasswordLogin\n      // function that we imported from our realm/authentication.js\n      // to validate the user credentials and log in the user into our App.\n      const user = await emailPasswordLogin(form.email, form.password);\n      if (user) {\n        redirectNow();\n      }\n    } catch (error) {\n      if (error.statusCode === 401) {\n        alert(\"Invalid username/password. Try again!\");\n      } else {\n        alert(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-7\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white w-2/4 h-[535px] rounded-md flex flex-row justify-around mr-auto ml-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          maxWidth: \"300px\",\n          margin: \"auto\",\n          height: \"50%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold py-3\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          type: \"email\",\n          variant: \"outlined\",\n          name: \"email\",\n          value: form.email,\n          onChange: onFormInputChange,\n          style: {\n            marginBottom: \"1rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          variant: \"outlined\",\n          name: \"password\",\n          value: form.password,\n          onChange: onFormInputChange,\n          style: {\n            marginBottom: \"1rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            backgroundColor: \"darkred\"\n          },\n          onClick: onSubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Image,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ch1TxMilEwA9v4WXkvtDaeAI6sk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","TextField","useContext","useEffect","useState","Link","useLocation","useNavigate","UserContext","Image","jsxDEV","_jsxDEV","Login","_s","navigate","location","user","fetchUser","emailPasswordLogin","form","setForm","email","password","onFormInputChange","event","name","value","target","redirectNow","redirectTo","search","replace","loadUser","fetchedUser","onSubmit","error","statusCode","alert","className","children","style","display","flexDirection","maxWidth","margin","height","fileName","_jsxFileName","lineNumber","columnNumber","label","type","variant","onChange","marginBottom","sx","backgroundColor","onClick","to","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/elise/Documents/bbycakesbusiness/frontend/src/pages/Login.page.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/user.context\";\r\nimport Image from \"../assets/Purse.png\"\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // We are consuming our user-management context to\r\n  // get & set the user details here\r\n  const { user, fetchUser, emailPasswordLogin } = useContext(UserContext);\r\n\r\n  // We are using React's \"useState\" hook to keep track\r\n  //  of the form values.\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // This function will be called whenever the user edits the form.\r\n  const onFormInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  // This function will redirect the user to the\r\n  // appropriate page once the authentication is done.\r\n  const redirectNow = () => {\r\n    const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\r\n    navigate(redirectTo ? redirectTo : \"/\");\r\n  };\r\n\r\n  // Once a user logs in to our app, we don’t want to ask them for their\r\n  // credentials again every time the user refreshes or revisits our app,\r\n  // so we are checking if the user is already logged in and\r\n  // if so we are redirecting the user to the home page.\r\n  // Otherwise we will do nothing and let the user to login.\r\n  const loadUser = async () => {\r\n    if (!user) {\r\n      const fetchedUser = await fetchUser();\r\n      if (fetchedUser) {\r\n        // Redirecting them once fetched.\r\n        redirectNow();\r\n      }\r\n    }\r\n  };\r\n\r\n  // This useEffect will run only once when the component is mounted.\r\n  // Hence this is helping us in verifying whether the user is already logged in\r\n  // or not.\r\n  useEffect(() => {\r\n    loadUser(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // This function gets fired when the user clicks on the \"Login\" button.\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      // Here we are passing user details to our emailPasswordLogin\r\n      // function that we imported from our realm/authentication.js\r\n      // to validate the user credentials and log in the user into our App.\r\n      const user = await emailPasswordLogin(form.email, form.password);\r\n      if (user) {\r\n        redirectNow();\r\n      }\r\n    } catch (error) {\r\n      if (error.statusCode === 401) {\r\n        alert(\"Invalid username/password. Try again!\");\r\n      } else {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-7\">\r\n      <div className=\"bg-white w-2/4 h-[535px] rounded-md flex flex-row justify-around mr-auto ml-auto\">\r\n        <form\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            maxWidth: \"300px\",\r\n            margin: \"auto\",\r\n            height: \"50%\",\r\n          }}\r\n        >\r\n          <h1 className=\"text-2xl font-semibold py-3\">Login</h1>\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={onFormInputChange}\r\n            style={{ marginBottom: \"1rem\" }}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={onFormInputChange}\r\n            style={{ marginBottom: \"1rem\" }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ backgroundColor: \"darkred\" }}\r\n            onClick={onSubmit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <p>\r\n            Don't have an account? <Link to=\"/signup\">Signup</Link>\r\n          </p>\r\n        </form>\r\n        <div>\r\n          <img src={Image} alt=\"logo\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}